// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String            @id @default(uuid())
  name               String
  email              String            @unique
  password           String
  bloodType          BloodType
  role               UserRole          @default(USER)
  status             UserStatus        @default(ACTIVE)
  location           String
  isBloodDonate      Boolean
  availability       Boolean           @default(false)
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  profile            Profile?
  requestAsDonor     DonationRequest[] @relation("donorRequests")
  requestAsRequester DonationRequest[] @relation("requesterRequests")

  @@map("users")
}

model Profile {
  id               String   @id @default(uuid())
  userId           String   @unique
  bio              String?
  age              String?
  lastDonationDate String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userId], references: [id])

  @@map("userProfiles")
}

model DonationRequest {
  id             String        @id @default(uuid())
  donorId        String?
  requesterId    String?
  phoneNumber    String
  numberOfBag    String
  hospitalName   String        @default("")
  bloodType      BloodType
  dateOfDonation String
  reason         String
  requestStatus  RequestStatus @default(PENDING)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  donor          User?         @relation("donorRequests", fields: [donorId], references: [id])
  requester      User?         @relation("requesterRequests", fields: [requesterId], references: [id])

  @@map("donationRequests")
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum BloodType {
  A_POSITIVE
  A_NEGATIVE
  B_POSITIVE
  B_NEGATIVE
  AB_POSITIVE
  AB_NEGATIVE
  O_POSITIVE
  O_NEGATIVE
}
